FROM continuumio/miniconda3:4.3.14

# NOTE: Versions have been pinned everywhere. These are the latest versions at the moment, because
# I want to ensure predictable behavior, but I don't know of any problems with higher versions:
# It would be good to update these over time.

# "pip install clodius" complained about missing gcc,
# and "apt-get install gcc" failed and suggested apt-get update.
# (Was having some trouble with installs, so split it up for granular caching.)
RUN apt-get update && apt-get install -y \
        gcc=4:4.9.2-2 \
        nginx=1.6.2-5+deb8u5 \
        supervisor=3.0r1-1+deb8u1 \
        unzip=6.0-16+deb8u2 \
        uwsgi-plugin-python3 \
        zlib1g-dev=1:1.2.8.dfsg-2+b1 \
        libcurl4-openssl-dev \
        g++ \
        vim \
        build-essential \
        libssl-dev \
        libpng-dev \
	fuse \
	libfuse-dev \
        curl \
        make \
    && rm -rf /var/lib/apt/lists/*

# Keep big dependencies which are unlikely to change near the top of this file.
RUN conda install --yes cython==0.25.2 numpy=1.12.0
RUN conda install --yes --channel bioconda pysam htslib=1.3.2
RUN pip install uwsgi==2.0.14

# goofys setup
WORKDIR /tmp
ENV PATH=$PATH:/usr/local/go/bin
RUN curl -O https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz && \
    rm go1.9.2.linux-amd64.tar.gz

RUN curl -L -O https://github.com/kahing/catfs/releases/download/v0.8.0/catfs && \
    mv catfs /usr/bin && chmod 0755 /usr/bin/catfs

ENV PATH=$PATH:/root/go/bin
WORKDIR /root/go/src/github.com/kahing/goofys
RUN git clone --depth 1 https://github.com/kahing/goofys.git --branch v0.19.0 .
RUN go get . && make install

# Setup home directory
RUN groupadd -r higlass && useradd -r -g higlass higlass
WORKDIR /home/higlass
RUN chown higlass:higlass .
USER higlass


# Setup server
# Most dependencies should come from a cached layer, even before we checkout:
# The idea is that you want to be able to release small updates to the code,
# without having to refetch all dependencies.
USER root
RUN pip install pyBigWig
RUN pip install clodius==<CLODIUS_VERSION>
# This is *not* tagged: The idea here is *not* to bust the cache on every minor version.
RUN wget https://raw.githubusercontent.com/4dn-dcic/higlass-server/master/requirements.txt
RUN pip install -r requirements.txt

# bump
RUN pip install hgtiles==<HGTILES_VERSION>

WORKDIR /home/higlass/projects
RUN chown higlass:higlass .
USER higlass
RUN git clone --depth 1 https://github.com/4dn-dcic/higlass-server.git --branch master 
USER root

WORKDIR /home/higlass/projects/higlass-server
RUN python manage.py collectstatic --noinput -c

WORKDIR /home/higlass/projects
RUN pip install -r higlass-server/requirements.txt
USER higlass

# Setup website (includes client js)
ENV WEBSITE_REPO higlass-website
RUN wget https://github.com/hms-dbmi/$WEBSITE_REPO/releases/download/v<WEBSITE_VERSION>/dist.zip
RUN unzip dist.zip -d higlass-website

RUN pwd

RUN sed -i -e s#assets/styles-third-party/hglib.css#https://unpkg.com/higlass@<LIBRARY_VERSION>/dist/styles/hglib.css#g higlass-website/index.html;
RUN sed -i -e s#assets/styles-third-party/hglib.css#https://unpkg.com/higlass@<LIBRARY_VERSION>/dist/styles/hglib.css#g higlass-website/app/index.html;
RUN sed -i -e s#assets/styles-third-party/hglib.css#https://unpkg.com/higlass@<LIBRARY_VERSION>/dist/styles/hglib.css#g higlass-website/demo.html;
RUN sed -i -e s#assets/styles-third-party/hglib.css#https://unpkg.com/higlass@<LIBRARY_VERSION>/dist/styles/hglib.css#g higlass-website/test_demo.html;

RUN sed -i -e s#assets/scripts-third-party/hglib.js#https://unpkg.com/higlass@<LIBRARY_VERSION>/dist/scripts/hglib.js#g higlass-website/index.html;
RUN sed -i -e s#assets/scripts-third-party/hglib.js#https://unpkg.com/higlass@<LIBRARY_VERSION>/dist/scripts/hglib.js#g higlass-website/app/index.html;
RUN sed -i -e s#assets/scripts-third-party/hglib.js#https://unpkg.com/higlass@<LIBRARY_VERSION>/dist/scripts/hglib.js#g higlass-website/demo.html;
RUN sed -i -e s#assets/scripts-third-party/hglib.js#https://unpkg.com/higlass@<LIBRARY_VERSION>/dist/scripts/hglib.js#g higlass-website/test_demo.html;

RUN sed -i -e s#assets/scripts-third-party/higlass-multivec.js#https://unpkg.com/higlass-multivec@<MULTIVEC_VERSION>/dist/higlass-multivec.js#g higlass-website/index.html;
RUN sed -i -e s#assets/scripts-third-party/higlass-multivec.js#https://unpkg.com/higlass-multivec@<MULTIVEC_VERSION>/dist/higlass-multivec.js#g higlass-website/app/index.html;
RUN sed -i -e s#assets/scripts-third-party/higlass-multivec.js#https://unpkg.com/higlass-multivec@<MULTIVEC_VERSION>/dist/higlass-multivec.js#g higlass-website/demo.html;
RUN sed -i -e s#assets/scripts-third-party/higlass-multivec.js#https://unpkg.com/higlass-multivec@<MULTIVEC_VERSION>/dist/higlass-multivec.js#g higlass-website/test_demo.html;

RUN sed -i -e s#assets/scripts-third-party/higlass-time-interval-track.js#https://unpkg.com/higlass-time-interval-track@<TIME_INTERVAL_TRACK_VERSION>/dist/higlass-time-interval-track.js#g higlass-website/index.html;
RUN sed -i -e s#assets/scripts-third-party/higlass-time-interval-track.js#https://unpkg.com/higlass-time-interval-track@<TIME_INTERVAL_TRACK_VERSION>/dist/higlass-time-interval-track.js#g higlass-website/app/index.html;
RUN sed -i -e s#assets/scripts-third-party/higlass-time-interval-track.js#https://unpkg.com/higlass-time-interval-track@<TIME_INTERVAL_TRACK_VERSION>/dist/higlass-time-interval-track.js#g higlass-website/demo.html;
RUN sed -i -e s#assets/scripts-third-party/higlass-time-interval-track.js#https://unpkg.com/higlass-time-interval-track@<TIME_INTERVAL_TRACK_VERSION>/dist/higlass-time-interval-track.js#g higlass-website/test_demo.html;

RUN ( echo "SERVER_VERSION: <SERVER_VERSION>"; \
      echo "WEBSITE_VERSION: <WEBSITE_VERSION>"; \
      echo "LIBRARY_VERSION: <LIBRARY_VERSION>"; \
      echo "MULTIVEC_VERSION: <MULTIVEC_VERSION>"; \
      echo "HGTILES_VERSION: <HGTILES_VERSION>"; \
      echo "CLODIUS_VERSION: <CLODIUS_VERSION>"; \
      echo "TIME_INTERVAL_TRACK_VERSION: <TIME_INTERVAL_TRACK_VERSION>"; \
      ) \
    > higlass-website/version.txt


# Setup supervisord and nginx
USER root

COPY nginx.conf /etc/nginx/
COPY sites-enabled/* /etc/nginx/sites-enabled/

COPY uwsgi_params higlass-server/
COPY default-viewconf-fixture.xml higlass-server/

COPY supervisord.conf .
COPY uwsgi.ini .
# Helper scripts
COPY *.sh ./

RUN rm /etc/nginx/sites-*/default && grep 'listen' /etc/nginx/sites-*/*
# Without this, two config files are trying to grab port 80:
# nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)

EXPOSE 80

# mount the goofyfs file system through supervisor
# make sure env is set here
ARG KEY
ENV AWS_ACCESS_KEY_ID ${KEY}
ARG SECRET
ENV AWS_SECRET_ACCESS_KEY ${SECRET}
ARG BUCKET
ENV AWS_BUCKET ${BUCKET}
ARG BUCKET2
ENV AWS_BUCKET2 ${BUCKET2}

ARG WORKERS
ENV WORKERS ${WORKERS}
RUN echo "WORKERS: $WORKERS"

ENV HIGLASS_SERVER_BASE_DIR /data
VOLUME /data
RUN mkdir -p /data/media/aws/$BUCKET
RUN mkdir -p /data/media/aws/$BUCKET2

# TODO: Needs to write to logs, but running as root is risky
# Given as list so that an extra shell does not need to be started.
CMD ["supervisord", "-n"]
